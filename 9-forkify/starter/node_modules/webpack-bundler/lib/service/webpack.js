'use strict';

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const MemoryFS = require("memory-fs");
const webpack = require('webpack');
const merge = require('webpack-merge');
const opn = require('opn');
const NyanProgressPlugin = require('nyan-progress-webpack-plugin');
// var BrowserSync = require('browser-sync-webpack-plugin')

// process.on('message',function(conig){
//     let {webpackBase, webpackExtend, conf} = conig
//     webpackServer(webpackBase, webpackExtend, conf)
// })

module.exports = webpackServer;

function webpackServer(webpackBase, webpackExtend, conf) {
    // console.log({conf})
    // const memoryFS = new MemoryFS()
    let mock = conf.mock,
        port = conf.port,
        isflow = conf.isflow;

    let webpackConfig = merge.smart(webpackBase, {
        watch: true,
        watchOptions: {
            poll: true
        },
        // devtool: 'cheap-module-eval-source-map',
        plugins: [new webpack.DefinePlugin({
            'APP_MOCK': (0, _stringify2.default)(mock),
            'APP_PORT': (0, _stringify2.default)(port)
        }), new NyanProgressPlugin()]
    });

    if (webpackExtend) webpackConfig = merge.smart(webpackConfig, webpackExtend);

    if (isflow) {
        webpackConfig.module.rules.forEach(function (item) {
            if (item.loader == 'vue-loader' && item.options && item.options.preLoaders && item.options.preLoaders.js) {
                let loaders = item.options.preLoaders.js.split('!');
                item.options.preLoaders.js = ['vue-flow-loader'].concat(loaders).join('!');
            }
        });
    }
    // console.log(webpackConfig)
    // console.log(webpackConfig.module.rules[0])

    let webpackCompiler = webpack(webpackConfig);
    // webpackCompiler.outputFileSystem = memoryFS
    // console.log({webpackCompiler})
    return webpackCompiler;
}